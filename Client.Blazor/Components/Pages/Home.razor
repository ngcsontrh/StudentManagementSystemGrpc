@page "/"
@page "/students"
@using Grpc.Net.Client
@using ProtoBuf.Grpc.Client
@using Shared
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>
<div class="float-end">
    <Dropdown>
        <Overlay>
            <Menu>
                <MenuItem OnClick="HandleSortById">
                    <Text>Sort by Id</Text>
                </MenuItem>
                <MenuItem OnClick="HandleSortByName">                   
                    <Text>Sort by Name</Text>
                </MenuItem>
                <MenuItem OnClick="HandleSortByBirthday">
                    <Text>Sort by Birthday</Text>
                </MenuItem>
                <MenuItem OnClick="HandleSortByAddress">
                    <Text>Sort by Address</Text>
                </MenuItem>
                <MenuItem OnClick="HandleSortByClassId">
                    <Text>Sort by Class Id</Text>
                </MenuItem>
                <MenuItem OnClick="HandleSortByClassName">
                    <Text>Sort by Class Name</Text>
                </MenuItem>
            </Menu>
        </Overlay>
        <ChildContent>
            <Button>
                Sort by <Icon Type="caret-down" Theme="outline" />
            </Button>
        </ChildContent>
    </Dropdown>

    <Button OnClick="LoadStudentsAsync">Reload Page</Button>
</div>

@if(errorMessage != null)
{
    <Alert Message="Error"
           Description="@errorMessage"
           Type="@AlertType.Error" />    
}
<Button Type="primary" OnClick="OpenCreatePopup">Add new student</Button>

<Table 
    DataSource="@students" 
    RowKey="s => s.Id"
    PageIndex="pageNumber"
    Loading="(students == null)"
    Total="total"
    PageSize="pageSize"
    HidePagination="(total <= pageSize)"
    OnPageIndexChange="HandlePageIndexChange"
    OnPageSizeChange="HandlePageSizeChange">

    <ChildContent Context="data">
        <PropertyColumn Property="s => s.Id" Title="Id" />
        <PropertyColumn Property="s => s.FullName" Title="Full Name" />
        <PropertyColumn Property="s => s.Birthday" Title="Birthday" Format="dd/MM/yyyy" />
        <PropertyColumn Property="s => s.Address" Title="Address" />
        <PropertyColumn Property="s => s.ClassId" Title="Class Id" />
        <PropertyColumn Property="s => s.ClassName" Title="Class Name" />
        <ActionColumn Title="Action" Class="d-flex justify-content-center align-items-center gap-2">
            <Popconfirm Title="Sure to delete?"
                        OnConfirm="()=> HandleOnDeleteAsync(data.Id)"
                        OkText="Yes"
                        CancelText="No">
                <Button Danger>
                    Delete
                </Button>
            </Popconfirm>

            <Button OnClick="() => OpenUpdatePopup(data)">Update</Button>
            <Button OnClick="() => OpenDetailsPopup(data.Id)">Details</Button>
        </ActionColumn>
    </ChildContent>
</Table>

<UpdatePopup IsVisible ="isOpenUpdatePopup" StudentProfile="student" ReloadStudents="LoadStudentsAsync" OnClose="CloseUpdatePopup"/>
<DetailsPopup IsVisible="isOpenDetailsPopup" Id="studentDetailsId" OnClose="CloseDetailsPopup"/>
<CreatePopup IsVisible="isOpenCreatePopup" ReloadStudents="LoadStudentsAsync" OnClose="CloseCreatePopup" />